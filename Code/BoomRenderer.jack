

class BoomRenderer {
    
    field DynamicArray arr;
    field int boomTime;

    constructor BoomRenderer new()
    {
	    let arr = DynamicArray.new();
        let boomTime = 1;

	    return this;    
    }
 
    method void dispose()
	{
        do arr.dispose();
		do Memory.deAlloc(this);
		return;
	}
    
    method void registerBoom(int x , int y)
    {
          do arr.push_back(x);
          do arr.push_back(y);
          do arr.push_back(0);

          do drawBoom(x, y);
        return;
    }

    method void tick()
    {
        var int i;

        let i = 0;
        while(i < arr.getSize())
        {
            if(arr.getIndexValue(i + 2) = boomTime)
            {
                do clearBoomPlace(arr.getIndexValue(i), arr.getIndexValue(i + 1));  
                do arr.remove(i);
                do arr.remove(i);
                do arr.remove(i);
            }
            else
            {
                do arr.setIndexValue(arr.getIndexValue(i + 2) + 1, i + 2 );
                let i = i + 3;
            }
        }
        
        return;
    }


    method void drawBoom(int x, int y)
    {
        var int memAddress;
        let memAddress = 16384 + (y * 32) + (x / 16);

        do Memory.poke(memAddress + 0, -15933);
		do Memory.poke(memAddress + 32, -7225);
		do Memory.poke(memAddress + 64, -3185);
		do Memory.poke(memAddress + 96, 31198);
		do Memory.poke(memAddress + 128, 15772);
		do Memory.poke(memAddress + 160, 8184);
		do Memory.poke(memAddress + 192, 4080);
		do Memory.poke(memAddress + 224, -31007);
		do Memory.poke(memAddress + 256, -4641);
		do Memory.poke(memAddress + 288, -2116);
		do Memory.poke(memAddress + 320, 16376);
		do Memory.poke(memAddress + 352, 16304);
		do Memory.poke(memAddress + 384, 14776);
		do Memory.poke(memAddress + 416, 29628);
		do Memory.poke(memAddress + 448, 26527);
		do Memory.poke(memAddress + 480, -14961);
        
        return;
    }

    method void clearBoomPlace(int x, int y)
    {
        var int memAddress;
        let memAddress = 16384 + (y * 32) + (x / 16);

        do Memory.poke(memAddress + 0, 0);
		do Memory.poke(memAddress + 32, 0);
		do Memory.poke(memAddress + 64, 0);
		do Memory.poke(memAddress + 96, 0);
		do Memory.poke(memAddress + 128, 0);
		do Memory.poke(memAddress + 160, 0);
		do Memory.poke(memAddress + 192, 0);
		do Memory.poke(memAddress + 224, 0);
		do Memory.poke(memAddress + 256, 0);
		do Memory.poke(memAddress + 288, 0);
		do Memory.poke(memAddress + 320, 0);
		do Memory.poke(memAddress + 352, 0);
		do Memory.poke(memAddress + 384, 0);
		do Memory.poke(memAddress + 416, 0);
		do Memory.poke(memAddress + 448, 0);
		do Memory.poke(memAddress + 480, 0);
        return;
    }


}
